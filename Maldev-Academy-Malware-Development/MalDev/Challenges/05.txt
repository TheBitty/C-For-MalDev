 Shellcoding A Reverse Shell 
This challenge will be taking a look at writing a custom shellcode reverse shell in C and Assembly. The goal is to have a working reverse shell over TCP using the Ws2_32.dll library.

This challenge builds upon the previous one, which focused on creating a basic shellcode in C/C++ and assembly. If you're not familiar with shellcoding using C/C++ and assembly, it's strongly advised to attempt the previous challenge first.

Try creating a small shellcode binary that launches a system shell process. Additionally, modify the I/O of the process so that it can send and receive data through an established TCP socket. To achieve this, you'll need to adjust the members of STARTUPINFO (hStdInput, hStdOutput, and hStdError) to redirect the I/O to the connected socket.

Resources: 
https://h0mbre.github.io/Win32_Reverse_Shellcode/
